? std::*
! std::tuple_element
std::ios_base::* = <ios>
std::chrono::* = <chrono>
std::this_thread::* = <thread>
std::string::* = <string>
std::locale::* = <locale>
std::copy = <algorithm>
std::find = <algorithm>
std::find_if = <algorithm>
std::lexicographical_compare = <algorithm>
std::max = <algorithm>
std::max_element = <algorithm>
std::min = <algorithm>
std::move = <algorithm>
std::reverse = <algorithm>
std::transform = <algorithm>
std::array = <array>
assert = <cassert>
std::isalnum = <cctype>
std::isalpha = <cctype>
std::iscntrl = <cctype>
std::isdigit = <cctype>
std::isgraph = <cctype>
std::islower = <cctype>
std::isprint = <cctype>
std::ispunct = <cctype>
std::isspace = <cctype>
std::isupper = <cctype>
std::isxdigit = <cctype>
std::tolower = <cctype>
std::toupper = <cctype>
std::fabs = <cmath>
std::isnan = <cmath>
std::sqrt = <cmath>
std::sqrtf = <cmath>
std::max_align_t = <cstddef>
std::nullptr_t = <cstddef>
std::ptrdiff_t = <cstddef>
std::size_t = <cstddef>
std::remove = <cstdio>
std::exit = <cstdlib>
std::memcpy = <cstring>
std::exception = <exception>
std::uncaught_exception = <exception>
std::forward_list = <forward_list>
std::ifstream = <fstream>
std::ofstream = <fstream>
std::function = <functional>
std::hash = <functional>
std::initializer_list = <initializer_list>
std::setfill = <iomanip>
std::setprecision = <iomanip>
std::setw = <iomanip>
std::boolalpha = <ios>
std::dec = <ios>
std::defaultfloat = <ios>
std::fixed = <ios>
std::hex = <ios>
std::internal = <ios>
std::ios = <ios>
std::ios_base = <ios>
std::left = <ios>
std::oct = <ios>
std::right = <ios>
std::scientific = <ios>
std::showbase = <ios>
std::showpoint = <ios>
std::showpos = <ios>
std::streamsize = <ios>
std::uppercase = <ios>
std::cerr = <iostream>
std::cout = <iostream>
std::wcout = <iostream>
std::basic_istream = <istream>
std::ws = <istream>
std::back_inserter = <iterator>
std::begin = <iterator>
std::bidirectional_iterator_tag = <iterator>
std::distance = <iterator>
std::end = <iterator>
std::forward_iterator_tag = <iterator>
std::input_iterator_tag = <iterator>
std::insert_iterator = <iterator>
std::inserter = <iterator>
std::iterator = <iterator>
std::iterator_traits = <iterator>
std::random_access_iterator_tag = <iterator>
std::numeric_limits = <limits>
std::numerical_limits = <limits>
std::has_facet = <locale>
std::locale = <locale>
std::numpunct = <locale>
std::use_facet = <locale>
std::map = <map>
std::addressof = <memory>
std::allocator = <memory>
std::auto_ptr = <memory>
std::make_shared = <memory>
std::shared_ptr = <memory>
std::unique_ptr = <memory>
std::bad_alloc = <new>
std::nothrow = <new>
std::accumulate = <numeric>
std::basic_ostream = <ostream>
std::endl = <ostream>
std::ostream = <ostream>
std::generate_canonical = <random>
std::uniform_int_distribution = <random>
std::uniform_real_distribution = <random>
std::atto = <ratio>
std::centi = <ratio>
std::deca = <ratio>
std::deci = <ratio>
std::exa = <ratio>
std::femto = <ratio>
std::giga = <ratio>
std::hecto = <ratio>
std::kilo = <ratio>
std::mega = <ratio>
std::micro = <ratio>
std::milli = <ratio>
std::nano = <ratio>
std::peta = <ratio>
std::pico = <ratio>
std::ratio = <ratio>
std::tera = <ratio>
std::yocto = <ratio>
std::yotta = <ratio>
std::zepto = <ratio>
std::zetta = <ratio>
std::set = <set>
std::basic_istringstream = <sstream>
std::basic_ostringstream = <sstream>
std::basic_stringstream = <sstream>
std::istringstream = <sstream>
std::ostringstream = <sstream>
std::stringstream = <sstream>
std::stack = <stack>
NULL = <stddef.h>
max_align_t = <stddef.h>
nullptr_t = <stddef.h>
offsetof = <stddef.h>
ptrdiff_t = <stddef.h>
size_t = <stddef.h>
std::domain_error = <stdexcept>
std::invalid_argument = <stdexcept>
std::logic_error = <stdexcept>
std::out_of_range = <stdexcept>
std::range_error = <stdexcept>
std::runtime_error = <stdexcept>
std::streambuf = <streambuf>
std::basic_string = <string>
std::char_traits = <string>
std::getline = <string>
std::stod = <string>
std::stof = <string>
std::stoi = <string>
std::stol = <string>
std::stold = <string>
std::stoll = <string>
std::stoul = <string>
std::stoull = <string>
std::string = <string>
std::to_string = <string>
std::wstring = <string>
std::get = <tuple>
std::ignore = <tuple>
std::make_tuple = <tuple>
std::tie = <tuple>
std::tuple = <tuple>
std::tuple_cat = <tuple>
std::tuple_size = <tuple>
std::add_const = <type_traits>
std::add_cv = <type_traits>
std::add_lvalue_reference = <type_traits>
std::add_pointer = <type_traits>
std::add_rvalue_reference = <type_traits>
std::add_volatile = <type_traits>
std::aligned_storage = <type_traits>
std::alignment_of = <type_traits>
std::common_type = <type_traits>
std::conditional = <type_traits>
std::decay = <type_traits>
std::enable_if = <type_traits>
std::false_type = <type_traits>
std::has_trivial_destructor = <type_traits>
std::has_virtual_destructor = <type_traits>
std::integral_constant = <type_traits>
std::is_abstract = <type_traits>
std::is_arithmetic = <type_traits>
std::is_array = <type_traits>
std::is_assignable = <type_traits>
std::is_base_of = <type_traits>
std::is_class = <type_traits>
std::is_compound = <type_traits>
std::is_const = <type_traits>
std::is_constructible = <type_traits>
std::is_convertible = <type_traits>
std::is_copy_assignable = <type_traits>
std::is_copy_constructible = <type_traits>
std::is_default_constructible = <type_traits>
std::is_destructible = <type_traits>
std::is_empty = <type_traits>
std::is_enum = <type_traits>
std::is_final = <type_traits>
std::is_floating_point = <type_traits>
std::is_function = <type_traits>
std::is_fundamental = <type_traits>
std::is_integral = <type_traits>
std::is_literal_type = <type_traits>
std::is_lvalue_reference = <type_traits>
std::is_member_function_pointer = <type_traits>
std::is_member_object_pointer = <type_traits>
std::is_member_pointer = <type_traits>
std::is_move_assignable = <type_traits>
std::is_move_constructible = <type_traits>
std::is_nothrow_assignable = <type_traits>
std::is_nothrow_constructible = <type_traits>
std::is_nothrow_copy_assignable = <type_traits>
std::is_nothrow_copy_constructible = <type_traits>
std::is_nothrow_default_constructible = <type_traits>
std::is_nothrow_destructible = <type_traits>
std::is_nothrow_move_assignable = <type_traits>
std::is_nothrow_move_constructible = <type_traits>
std::is_null_pointer = <type_traits>
std::is_object = <type_traits>
std::is_pod = <type_traits>
std::is_pointer = <type_traits>
std::is_polymorphic = <type_traits>
std::is_reference = <type_traits>
std::is_rvalue_reference = <type_traits>
std::is_same = <type_traits>
std::is_scalar = <type_traits>
std::is_signed = <type_traits>
std::is_standard_layout = <type_traits>
std::is_trivial = <type_traits>
std::is_trivially_assignable = <type_traits>
std::is_trivially_constructible = <type_traits>
std::is_trivially_copy_assignable = <type_traits>
std::is_trivially_copy_constructible = <type_traits>
std::is_trivially_copyable = <type_traits>
std::is_trivially_default_constructible = <type_traits>
std::is_trivially_destructible = <type_traits>
std::is_trivially_move_assignable = <type_traits>
std::is_trivially_move_constructible = <type_traits>
std::is_union = <type_traits>
std::is_unsigned = <type_traits>
std::is_void = <type_traits>
std::is_volatile = <type_traits>
std::make_signed = <type_traits>
std::make_unsigned = <type_traits>
std::remove_all_extents = <type_traits>
std::remove_const = <type_traits>
std::remove_cv = <type_traits>
std::remove_extent = <type_traits>
std::remove_pointer = <type_traits>
std::remove_reference = <type_traits>
std::remove_volatile = <type_traits>
std::true_type = <type_traits>
std::underlying_type = <type_traits>
std::bad_cast = <typeinfo>
std::unordered_map = <unordered_map>
std::declval = <utility>
std::forward = <utility>
std::integer_sequence = <utility>
std::make_pair = <utility>
std::pair = <utility>
std::swap = <utility>
std::vector = <vector>
